Result med 5 processer

/* DTU Course 02158 Concurrent Programming
 *   spinAlley.pml 
 *     Simple PROMELA model with non-atomic increment and decrement 
 */

#define N	5	/* no. of processes */

short c = 0;
short u = 4;
short d = 1;
short b = 1;
bool trafficUp = false;

/* Declare and instantiate N Counter processes */


inline v(s){
	s++;
}

inline p(s){
	atomic{
		s > 0 -> s--;
	}
}

active [N] proctype Alley () 
{
	c=(c+1)%N;
entry:
	if :: c<4 -> 
		if :: trafficUp == true -> 
			if :: u == 4 -> p(d);
				trafficUp = true;
               :: else -> skip;
			fi;
		p(u);
		:: trafficUp == false -> p(b);
			if :: trafficUp == true ->
				v(b);
			:: trafficUp == false ->
				p(d);
				v(b); 
			fi;
			p(u);
			trafficUp=true;
		:: else -> skip;
		fi;
	:: c>=4 ->
		if :: trafficUp == true -> 
			p(d);
			p(u);
			trafficUp = false;
		:: trafficUp ==false; ->
			if :: u == 4 ->
				p(d);
				trafficUp=false;
			:: else -> skip;
			fi;
			p(u);
		fi;
	:: else -> skip;
	fi;


leave:
	v(u);
	atomic{
	if :: u==4 ->		
		if :: d== 0 -> v(d);
		:: else -> skip;
		fi;
	:: else -> skip;
	fi;
	}
}



/* Invariant check */


active proctype Check ()
{
	(0 <= c && c <= 7) -> assert(true);
	(0 <= u && u <= 4) -> assert(true);
	(0 <= d && d <= 1) -> assert(true);
	(0 <= b && b <= 1) -> assert(true);	
}